{% extends "layouts/pjax.nunj" if request.isPjax else "layouts/frame.nunj" %}
{% import "macros/status.nunj" as status %}
{% import "macros/errors.nunj" as errors %}

{% set page = {
    title: entity.title
} %}

{% set previewUrl = path(frctl.theme.urlFromRoute('preview', {handle: entity.handle})) %}

{% block content %}

{% if frctl.env.server and frctl.env.sync %}
    {% set rendered = false %}
{% else %}
    {% set rendered = entity.render(null, renderEnv, { preview: true, collate: true }) | async(true) %}
    {% if rendered | isError %}
        {% set error = rendered %}
        {% set renderError %}{{ errors.renderError('component', error.message) }}{% endset %}
        {% set rendered = false %}
    {% endif %}
{% endif %}

<div class="Pen" data-behaviour="pen" id="pen-{{ entity.id }}">

    {% block penContent %}

    {% if entity.isComponent %}
        {% set header = entity %}
    {% else %}
        {% set header = entity.parent %}
    {% endif %}
    <div class="Pen-panel Pen-header">
        <h1 class="Pen-title">
            {{ status.unlabelled(header.status, header.status.key) }}
            {{ header.title }}
        </h1>
    </div>
    {% if header.notes %}
    <div class="Pen-variantDescription Prose">
        {{ frctl.docs.renderString(header.notes, renderEnv) | async }}
    </div>
    {% endif %}

    {% if entity.isComponent %}
        {% set variants = entity.variants() %}

        {% if variants.size > 0 %}
            {% if entity.handle == 'icon' %}
                {% include "partials/pen/icon.nunj" %}
            {% else %}
                {% asyncAll variant in variants.items() %}
                    {% include "partials/pen/variant.nunj" %}
                {% endall %}
            {% endif %}
        {% endif %}

    {% else %}
        {% set variant = entity %}
        {% include "partials/pen/variant.nunj" %}
    {% endif %}

    {% endblock %}

</div>

{% endblock %}
